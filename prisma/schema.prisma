generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions", "postgresqlExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  extensions      = [pgcrypto]
}

model application {
  id             String      @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  status         String      @db.VarChar(255)
  job_posting_id String      @db.Uuid
  applicant_id   String      @db.Uuid
  created_at     DateTime    @default(now()) @db.Timestamp(6)
  updated_at     DateTime    @default(now()) @db.Timestamp(6)
  user           user        @relation(fields: [applicant_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  job_posting    job_posting @relation(fields: [job_posting_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model company {
  id             String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  description    String?       @db.VarChar(255)
  address        String?       @db.VarChar(255)
  contact_number String?       @db.VarChar(255)
  name           String        @db.VarChar(255)
  created_at     DateTime      @default(now()) @db.Timestamp(6)
  updated_at     DateTime      @default(now()) @db.Timestamp(6)
  user_id        String        @db.Uuid
  tenant_id      String        @db.VarChar(255)
  user           user          @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  employee       employee[]
  hr_manager     hr_manager[]
  job_posting    job_posting[]
}

model employee {
  id         String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  job_title  String   @db.VarChar(255)
  salary     Int
  date_hired DateTime @db.Timestamp(6)
  company_id String   @db.Uuid
  user_id    String   @db.Uuid
  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @default(now()) @db.Timestamp(6)
  company    company  @relation(fields: [company_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user       user     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model hr_manager {
  id         String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id    String   @db.Uuid
  company_id String   @db.Uuid
  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @default(now()) @db.Timestamp(6)
  company    company  @relation(fields: [company_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user       user     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model job_posting {
  id          String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  title       String        @db.VarChar(255)
  description String        @db.VarChar(255)
  salary      Int
  location    String        @db.VarChar(255)
  company_id  String        @db.Uuid
  created_at  DateTime      @default(now()) @db.Timestamp(6)
  updated_at  DateTime      @default(now()) @db.Timestamp(6)
  application application[]
  company     company       @relation(fields: [company_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model user {
  id          String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email       String        @unique @db.VarChar(255)
  firstName   String?       @db.VarChar(255)
  lastName    String?       @db.VarChar(255)
  roq_user_id String        @db.VarChar(255)
  tenant_id   String        @db.VarChar(255)
  created_at  DateTime      @default(now()) @db.Timestamp(6)
  updated_at  DateTime      @default(now()) @db.Timestamp(6)
  application application[]
  company     company[]
  employee    employee[]
  hr_manager  hr_manager[]
}
